using System;
using System.Text;
using System.Xml.Serialization;
using System.IO;
using System.Xml.Linq;
using System.Xml;

namespace MobileTopUpIntegration
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Create a new request message
            var request = new RequestMessage
            {
                MessageDate = DateTime.Now,
                MessageTime = DateTime.Now,
                MessageID = 332526,
                PhoneNumber = "630000000000",
                Amount = 25
            };

            // Build and Display XML request
            var requestBuilder = new XmlRequestBuilder();
            byte[] requestBytes = requestBuilder.BuildRequest(request);
            request.Request_Xml(requestBytes);

            // Parsing the byte array ( response 1 )
            byte[] response1 = {
                69, 90, 69, 45, 88, 77, 76, 45, 77, 115, 103, 48, 50, 60, 77, 101,
                115, 115, 97, 103, 101, 62, 13, 10, 32, 32, 60, 72, 101, 97, 100, 101,
                114, 62, 13, 10, 32, 32, 32, 32, 60, 77, 101, 115, 115, 97, 103, 101,
                68, 97, 116, 101, 62, 50, 48, 49, 48, 51, 50, 52, 60, 47, 77, 101, 115,
                115, 97, 103, 101, 68, 97, 116, 101, 62, 13, 10, 32, 32, 32, 32, 60,
                77, 101, 115, 115, 97, 103, 101, 84, 105, 109, 101, 62, 49, 57, 50, 56,
                48, 54, 60, 47, 77, 101, 115, 115, 97, 103, 101, 84, 105, 109, 101, 62,
                13, 10, 32, 32, 60, 47, 72, 101, 97, 100, 101, 114, 62, 13, 10, 32,
                32, 60, 66, 111, 100, 121, 62, 13, 10, 32, 32, 32, 32, 60, 84, 114, 97,
                110, 115, 97, 99, 116, 105, 111, 110, 73, 68, 62, 51, 51, 50, 53, 50,
                54, 60, 47, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 73, 68,
                62, 13, 10, 32, 32, 32, 32, 60, 84, 114, 97, 110, 115, 97, 99, 116, 105,
                111, 110, 78, 117, 109, 98, 101, 114, 62, 49, 50, 49, 48, 52, 53, 50,
                60, 47, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111, 110, 78, 117, 109,
                98, 101, 114, 62, 13, 10, 32, 32, 32, 32, 60, 80, 104, 111, 110, 101,
                78, 117, 109, 98, 101, 114, 62, 54, 51, 48, 48, 48, 48, 48, 48, 60,
                47, 80, 104, 111, 110, 101, 78, 117, 109, 98, 101, 114, 62, 13, 10,
                32, 32, 32, 32, 60, 65, 109, 111, 117, 110, 116, 62, 48, 48, 48, 48,
                48, 48, 50, 53, 48, 48, 60, 47, 65, 109, 111, 117, 110, 116, 62, 13,
                10, 32, 32, 32, 32, 60, 82, 101, 115, 117, 108, 116, 62, 48, 49, 60,
                47, 82, 101, 115, 117, 108, 116, 62, 13, 10, 32, 32, 60, 47, 66, 111,
                100, 121, 62, 13, 10, 60, 47, 77, 101, 115, 115, 97, 103, 101, 62
            };

            // Parsing and printing the response message
            var responseBuilder = new XmlResponseParser();
            var responseMessage1 = new ResponseMessage();
            responseBuilder.ParseResponse(response1, responseMessage1);
            responseMessage1.Print_Response();

            //Parsing the byte array (response 2)
            byte[] response2 = new byte[] {
                69, 90, 69, 45, 88, 77, 76, 45, 77, 115, 103, 48, 50, 60, 77,
                101, 115, 115, 97, 103, 101, 62, 13, 10, 32, 32, 60, 72,
                101, 97, 100, 101, 114, 62, 13, 10, 32, 32, 32, 32, 60, 77, 101,
                115, 115, 97, 103, 101, 68, 97, 116, 101, 62, 50, 48, 49,
                48, 48, 51, 50, 52, 60, 47, 77, 101, 115, 115, 97, 103, 101, 68,
                97, 116, 101, 62, 13, 10, 32, 32, 32, 32, 60, 77, 101, 115,
                115, 97, 103, 101, 84, 105, 109, 101, 62, 49, 57, 50, 56, 48,
                56, 60, 47, 77, 101, 115, 115, 97, 103, 101, 84, 105, 109,
                101, 62, 13, 10, 32, 32, 60, 47, 72, 101, 97, 100, 101, 114,
                62, 13, 10, 32, 32, 60, 66, 111, 100, 121, 62, 13, 10, 32,
                32, 32, 32, 60, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111,
                110, 73, 68, 62, 51, 51, 50, 53, 50, 55, 60, 47, 84, 114, 97,
                110, 115, 97, 99, 116, 105, 111, 110, 73, 68, 62, 13, 10,
                32, 32, 32, 32, 60, 84, 114, 97, 110, 115, 97, 99, 116, 105,
                111, 110, 78, 117, 109, 98, 101, 114, 62, 49, 50, 49, 48, 53,
                55, 48, 60, 47, 84, 114, 97, 110, 115, 97, 99, 116, 105, 111,
                110, 78, 117, 109, 98, 101, 114, 62, 13, 10, 32, 32, 32,
                32, 60, 80, 104, 111, 110, 101, 78, 117, 109, 98, 101, 114,
                62, 54, 51, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 60, 47, 80,
                104, 111, 110, 101, 78, 117, 109, 98, 101, 114, 62, 13, 10,
                32, 32, 32, 32, 60, 65, 109, 111, 117, 110, 116, 62, 48, 48,
                48, 48, 48, 50, 53, 48, 48, 60, 47, 65, 109, 111, 117, 110,
                116, 62, 13, 10, 32, 32, 32, 32, 60, 82, 101, 115, 117, 108,
                116, 62, 48, 51, 60, 47, 82, 101, 115, 117, 108, 116,
                62, 13, 10, 32, 32, 60, 47, 66, 111, 100, 121, 62, 13, 10, 60,
                47, 77, 101, 115, 115, 97, 103, 101, 62
            };

            var responseMessage2 = new ResponseMessage();
            responseBuilder.ParseResponse(response2, responseMessage2);
            responseMessage2.Print_Response();

            // Wait for user input to close
            Console.Read();
        }
    }
}
